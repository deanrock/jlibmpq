/*
 *  com_zthread_libmpq_MPQ.cpp -- some hooks to work with Java
 *
 *  Copyright (C) 2003 Ryan Henszey <henszey@gmail.com>
 * http://zthread.com/pages/jlibmpq.php
 *
 * So I uhh guess this is subject to the gnu since it is an extention or
 *  something like that, I really have no idea.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *  $Id: mpq.h,v 1.1 2005/04/09 22:09:18 ufoz Exp $
 */
 
 /* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_zthread_libmpq_MPQ */

#ifndef _Included_com_zthread_libmpq_MPQ
#define _Included_com_zthread_libmpq_MPQ
#ifdef __cplusplus
extern "C" {
#endif
#undef com_zthread_libmpq_MPQ_LIBMPQ_MPQ_ARCHIVE_SIZE
#define com_zthread_libmpq_MPQ_LIBMPQ_MPQ_ARCHIVE_SIZE 1L
#undef com_zthread_libmpq_MPQ_LIBMPQ_MPQ_HASHTABLE_SIZE
#define com_zthread_libmpq_MPQ_LIBMPQ_MPQ_HASHTABLE_SIZE 2L
#undef com_zthread_libmpq_MPQ_LIBMPQ_MPQ_BLOCKTABLE_SIZE
#define com_zthread_libmpq_MPQ_LIBMPQ_MPQ_BLOCKTABLE_SIZE 3L
#undef com_zthread_libmpq_MPQ_LIBMPQ_MPQ_BLOCKSIZE
#define com_zthread_libmpq_MPQ_LIBMPQ_MPQ_BLOCKSIZE 4L
#undef com_zthread_libmpq_MPQ_LIBMPQ_MPQ_NUMFILES
#define com_zthread_libmpq_MPQ_LIBMPQ_MPQ_NUMFILES 5L
#undef com_zthread_libmpq_MPQ_LIBMPQ_MPQ_COMPRESSED_SIZE
#define com_zthread_libmpq_MPQ_LIBMPQ_MPQ_COMPRESSED_SIZE 6L
#undef com_zthread_libmpq_MPQ_LIBMPQ_MPQ_UNCOMPRESSED_SIZE
#define com_zthread_libmpq_MPQ_LIBMPQ_MPQ_UNCOMPRESSED_SIZE 7L
#undef com_zthread_libmpq_MPQ_LIBMPQ_FILE_COMPRESSED_SIZE
#define com_zthread_libmpq_MPQ_LIBMPQ_FILE_COMPRESSED_SIZE 1L
#undef com_zthread_libmpq_MPQ_LIBMPQ_FILE_UNCOMPRESSED_SIZE
#define com_zthread_libmpq_MPQ_LIBMPQ_FILE_UNCOMPRESSED_SIZE 2L
#undef com_zthread_libmpq_MPQ_LIBMPQ_FILE_COMPRESSION_TYPE
#define com_zthread_libmpq_MPQ_LIBMPQ_FILE_COMPRESSION_TYPE 3L
#undef com_zthread_libmpq_MPQ_LIBMPQ_FILE_TYPE_INT
#define com_zthread_libmpq_MPQ_LIBMPQ_FILE_TYPE_INT 4L
#undef com_zthread_libmpq_MPQ_LIBMPQ_FILE_TYPE_CHAR
#define com_zthread_libmpq_MPQ_LIBMPQ_FILE_TYPE_CHAR 5L
#undef com_zthread_libmpq_MPQ_LIBMPQ_FILE_HASH1
#define com_zthread_libmpq_MPQ_LIBMPQ_FILE_HASH1 6L
#undef com_zthread_libmpq_MPQ_LIBMPQ_FILE_HASH2
#define com_zthread_libmpq_MPQ_LIBMPQ_FILE_HASH2 7L
/*
 * Class:     com_zthread_libmpq_MPQ
 * Method:    getLibraryVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_zthread_libmpq_MPQ_getLibraryVersion
  (JNIEnv *, jclass);

/*
 * Class:     com_zthread_libmpq_MPQ
 * Method:    openArchive
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_zthread_libmpq_MPQ_openArchive
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_zthread_libmpq_MPQ
 * Method:    getArchiveInfo
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_zthread_libmpq_MPQ_getArchiveInfo
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_zthread_libmpq_MPQ
 * Method:    getFileInfoByNumber
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_com_zthread_libmpq_MPQ_getFileInfoByNumber
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     com_zthread_libmpq_MPQ
 * Method:    getFileData
 * Signature: (II)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_zthread_libmpq_MPQ_getFileData
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_zthread_libmpq_MPQ
 * Method:    getFileNumberByName
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_zthread_libmpq_MPQ_getFileNumberByName
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     com_zthread_libmpq_MPQ
 * Method:    closeArchive
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_zthread_libmpq_MPQ_closeArchive
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
